#!/bin/bash

# NOTE: Heroku Cedar Stack
#  gcc needs to be 4.3

# See http://cran.r-project.org/doc/manuals/R-admin.html for details on building R

# fail fast
set -e

# debug
# set -x

## HELPERS

function download() {
  if [ ! -f "$2" ]; then
    echo Downloading $2...
    curl $1 -o $2 -s -S
  else
    echo Got $2...
  fi
}

function build() {
  echo ----------------------------------------------------------------------
  echo Building $@...
  echo ----------------------------------------------------------------------
  echo
  pushd $1
    ./configure --prefix=$vendordir/$2 ${@:3} && make && make install && make clean
  popd > /dev/null
  echo
  echo

  # add to libraries and pkg-config
  export LD_LIBRARY_PATH="$vendordir/$2:$LD_LIBRARY_PATH"
  export PKG_CONFIG_PATH="$vendordir/$2/lib/pkgconfig:$PKG_CONFIG_PATH"

}

## SCRIPT

r_version="${1:-3.1.2}"
r_version_major=${r_version:0:1}
build_no="${2:-`date +%Y%m%d-%H%M`}"

# check arguments
if ([ -z "$r_version" ] || [ -z "$build_no" ]); then
  echo
  echo "USAGE: $0 VERSION [BUILDNUM]"
  echo
  echo "  VERSION    is the R version. E.g. 3.1.2"
  echo "  BUILDNUM   the build number. E.g. 20140608-2010"
  echo
  exit 1
fi

echo
echo R Version = $r_version
echo Build No. = $build_no
echo

basedir="$( cd -P "$( dirname "$0" )" && pwd )"

# create output directory
vendordir=/app/vendor
mkdir -p $vendordir

echo ======================================================================
echo Downloading and unpacking dependancies...
echo ======================================================================

# http://www.freetype.org/freetype2/
freetype_version=2.5.0
download "http://www.mirrorservice.org/sites/download.savannah.gnu.org/releases/freetype/freetype-$freetype_version.tar.gz" freetype-$freetype_version.tar.gz
tar xzf freetype-$freetype_version.tar.gz

# http://directfb.org/
directfb_version=1.2.9
directfb_ver_major=${directfb_version:0:3}
download "http://directfb.org/downloads/Core/DirectFB-$directfb_ver_major/DirectFB-$directfb_version.tar.gz" DirectFB-$directfb_version.tar.gz
tar xzf DirectFB-$directfb_version.tar.gz

# http://www.libpng.org/pub/png/libpng.html
libpng_version=1.2.53
libpng_ver=${libpng_version:0:1}${libpng_version:2:1}
download "ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng$libpng_ver/libpng-$libpng_version.tar.gz" libpng-$libpng_version.tar.gz
tar xzf libpng-$libpng_version.tar.gz

# http://www.cairographics.org
pixman_version=0.30.2
download "http://www.cairographics.org/releases/pixman-$pixman_version.tar.gz" pixman-$pixman_version.tar.gz
tar xzf $basedir/pixman-$pixman_version.tar.gz

# http://www.freedesktop.org/software/fontconfig
fontconfig_version=2.10.93
download "http://www.freedesktop.org/software/fontconfig/release/fontconfig-$fontconfig_version.tar.gz" fontconfig-$fontconfig_version.tar.gz
tar xzf $basedir/fontconfig-$fontconfig_version.tar.gz

# http://www.cairographics.org
cairo_version=1.12.16
download "http://www.cairographics.org/releases/cairo-$cairo_version.tar.xz" cairo-$cairo_version.tar.xz
tar xJf $basedir/cairo-$cairo_version.tar.xz

# GSL
gsl_version=1.6
download "ftp://ftp.gnu.org/gnu/gsl/gsl-$gsl_version.tar.gz" gsl-$gsl_version.tar.gz
tar xzf $basedir/gsl-$gsl_version.tar.gz

echo ============================================================
echo Building dependencies...
echo ============================================================

build "$basedir/freetype-$freetype_version" freetype
build "$basedir/DirectFB-$directfb_version" DirectFB
build "$basedir/libpng-$libpng_version" libpng
build "$basedir/pixman-$pixman_version" pixman
build "$basedir/fontconfig-$fontconfig_version" fontconfig
build "$basedir/cairo-$cairo_version" cairo
build "$basedir/gsl-$gsl_version" gsl

echo ============================================================

# R
download "http://cran.r-project.org/src/base/R-$r_version_major/R-$r_version.tar.gz" R-$r_version.tar.gz
tar xzf R-$r_version.tar.gz

# http://gcc.gnu.org/wiki/GFortran
gcc_ver=4.3.6
gcc_version=${gcc_ver:0:3}
download "http://gfortran.com/download/x86_64/snapshots/gcc-$gcc_version.tar.xz" gcc-$gcc_version.tar.xz
tar xJf $basedir/gcc-$gcc_version.tar.xz -C $vendordir
mv $vendordir/gcc-$gcc_version $vendordir/gcc

# patch gcc features.h file
# see http://permalink.gmane.org/gmane.comp.gcc.help/40166
mkdir -p $vendordir/gcc/lib/gcc/x86_64-unknown-linux-gnu/$gcc_ver/include-fixed
cp $basedir/features.h $vendordir/gcc/lib/gcc/x86_64-unknown-linux-gnu/$gcc_ver/include-fixed/features.h
export LD_LIBRARY_PATH="$vendordir/gcc:$LD_LIBRARY_PATH"

# https://www.gnu.org/software/libc/
glibc_version=2.7
download "http://ftp.gnu.org/gnu/glibc/glibc-$glibc_version.tar.gz" glibc_$glibc_version.tar.gz
tar xzf $basedir/glibc_$glibc_version.tar.gz -C $vendordir
mv $vendordir/glibc-$glibc_version $vendordir/glibc

# build R
echo ============================================================
echo Building R
echo ============================================================

# copy over our customized vars.mk file
cp -f $basedir/vars.mk $basedir/R-$r_version/share/make/vars.mk

pushd $basedir/R-$r_version/

# download the recommended packages
# ./tools/rsync-recommended

export LDFLAGS="-L$vendordir/gcc/lib64"
export CPPFLAGS="-I$vendordir/glibc/string -I$vendordir/glibc/time -I$vendordir/cairo/include/cairo/include"
export PATH="$vendordir/gcc/bin:$PATH"
export R_BASE="$vendordir/R"
export R_HOME="$R_BASE/lib64/R"
export R_INCLUDE=$R_HOME/include

echo ----------------------------------------------------------------------
echo LD_LIBRARY_PATH=$LD_LIBRARY_PATH
echo PKG_CONFIG_PATH=$PKG_CONFIG_PATH
echo ----------------------------------------------------------------------

./configure --prefix=$vendordir/R --with-x --with-libpng --with-cairo --enable-R-shlib && make && make install

popd

# HACK for GSL library resolution
ln -s $vendordir/gsl/lib/libgsl* $vendordir/R/lib64/R/lib

# TODO: remove unneeded files to make buildpack smaller

# compress and upload to S3 bucket
pushd $vendordir
tar czf "R-$r_version-binaries-$build_no.tar.gz" freetype DirectFB libpng pixman fontconfig cairo gsl gcc glibc R
popd

echo
echo Uploading binaries to S3
bundle install
bundle exec ruby ./s3_upload.rb "$vendordir/R-$r_version-binaries-$build_no.tar.gz"
